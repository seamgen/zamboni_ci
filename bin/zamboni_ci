#!/usr/bin/env ruby

require 'optparse'
require 'curb'
require 'spaceship'
require 'keychain'
require_relative "../lib/zamboni_ci/command_parser"
require_relative "../lib/zamboni_ci/device_parser"
require_relative "../lib/zamboni_ci/hockey_crawler"

#parse command line arguments
arg_array = ARGV
options = CommandParser.parse arg_array

if CommandParser.validate options

   hockey_pass = Keychain.internet_passwords.where(:server => "rink.hockeyapp.net", :account => options.hockey_account).first.password

   crawler = HockeyCrawler.new(options.hockey_account, hockey_pass, options.hockey_app_id)

   device_list = crawler.scrape_hockey

   hockey_devices = DeviceParser.parse_hockey(device_list)

   # Log into Apple Portal
   apple_pass = Keychain.internet_passwords.where(:server => "developer.apple.com", :account => options.apple_account).first.password
   Spaceship::Portal.login(options.apple_account, apple_pass)

   # Find provisioning profile
   all_profiles = Spaceship::Portal.provisioning_profile.find_by_bundle_id(options.bundle_id)
   profile = all_profiles.last

   # Find devices to add
   spaceship_devices = DeviceParser.parse_spaceship(profile.devices)

   devices_to_add = DeviceParser.find_new_devices(hockey_devices, spaceship_devices)

   # Print devices to add
   devices_to_add.each do |device|
      puts "add: " + device.name + " " + device.udid
   end
else
   puts "zamboni_ci: Missing required argument. see zamboni_ci -h for details"
end

=begin
profile.devices.push new_device

puts profile.devices

profile.update!
=end
